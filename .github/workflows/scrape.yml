# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Scrape-CI

on: [push, pull_request]
  # push:
  #   branches: [ master ]
  # pull_request:
  #   branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: js # this will become `scrape`

    strategy:
      matrix:
        # What we actually want is: current active, and lts
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node-version: [14.x, 16.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'  # doesn't work locally with act
        cache-dependency-path: ./js/package-lock.json
    
    - run: |
        npm ci
        npm test

  # https://github.com/marketplace/actions/publish-docker
  container:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Publish to Registry
      pre: echo ::save-state name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: daneroo/scrobblecast/scrape
        workdir: js
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        snapshot: true  # add a tag like: 2021091401115446b3b3
        no_push: true
        tag_names: true # should include
        # no_push: ${{ github.event_name == 'push' }} # actually on for tags?
        # tags: "latest,${{ env.STATE_RELEASE_VERSION }}"
